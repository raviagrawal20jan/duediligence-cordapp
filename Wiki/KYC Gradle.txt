cd C:\Corda1\samples-java\Advanced\duediligence-cordapp

gradlew clean deployNodes   --no need to run if no code change
  

.\build\nodes\runnodes.bat

gradlew uploadWhitelists
gradlew runAPIserver
gradlew runPorscheAPIserver
gradlew runLNAPIserver

------
O=LexisNexis,L=Boston,C=US

git clone https://gitlab.com/bluebank/braid.git
install maven set env variables MAVEN_HOME and JAVA_HOME
C:\apache-maven-3.8.3-bin\apache-maven-3.8.3\bin\mvn clean install -DskipTests
--------------------------------------------------------------------------------------------------------------------
Docker
cd C:\Corda1\samples-java\Advanced\duediligence-cordapp\build\nodes

gradlew prepareDockerNodes 
docker-compose up

---acr
az group create --name BlockChain --location eastus
az acr create --resource-group BlockChain --name cordaacr --sku Basic
az acr login --name cordaacr
docker-compose up --build -d XXXXX

docker-compose push
az acr repository show --name cordaacr --repository porsche-lender

--create context
docker login azure
docker context create aci myacicontext
docker context ls

docker context use myacicontext
docker compose up
docker ps
docker logs azurevotingappredis_azure-vote-front
docker compose down

Step #1: At Party(Auto lender), file the original Corporate Records auditing process with Auditor(Trusted Auditor) - LexisNexis
------------------------------------------------------------------------------------------------------

flow start RequestToValidateCorporateRecordsInitiator validater: LexisNexis, numberOfFiles: 10
------------------------------------------------------------------------------------------------------
Step #2: Go to the Trusted Auditor Node - LexisNexis, validate the auditing request
(This step symbolize the auditing process by this third party auditor). 
Put in the linearId which was returned in Step #1.
------------------------------------------------------------------------------------------------
flow start ValidateCorporateRecordsInitiator linearId: 9772d174-7ffb-4044-b596-9d8b529706ab
------------------------------------------------------------------------------------------------

Step #3: Go to PartyA(Auto Lender), Do a query to confirm that the request has been validated.
You should see the variable qualification=true.
-------------------------------------------------------------------------------------------------------------------
run vaultQuery contractStateType: net.corda.samples.duediligence.states.CorporateRecordsAuditRequest

-----------------------------------------------------------------------------------------------------------

Then, we will instruct PartyA to share a copy of the auditing result with PartyB: 
(Again, You would need put in the linearId returned from Step #1). 
The parameter trustedAuditorAttachment is a jar file which records the trusted auditors. 
If PartyA used an untrusted auditor to accquire the corporate records auditing report.
 He will be prohibited to share with anyone because it is valueless effort
(in this business use case, Of course you can modify the business use cases).

------------------------------------------------------------------------------------------------------------------------
flow start ShareAuditingResultInitiator AuditingResultID: <XXXX-XXX-XXXX-XXXXX-XXXXXX>, sendTo: BankB, trustedAuditorAttachment: "8DF3275D80B26B9A45AB022F2FDA4A2ED996449B425F8F2245FA5BCF7D1AC587"
----------------------------------------------------------------------------------------------------------------

This flow will return the LinearId of the copy of auditing report, you would need this in Step #6.
----------------------------------------------------------------------------------------------------------------
Step #4: Go to PartyB, do a query to confirm the delievery of copy of the Auditing Report.
----------------------------------------------------------------------------------------------------------------
run vaultQuery contractStateType: net.corda.samples.duediligence.states.CopyOfCoporateRecordsAuditRequest
----------------------------------------------------------------------------------------------------------------

As of now, the sharing of the trusted auditing report is done. 
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

What left now for both PartyA and PartyB in this use case is to upload the Corporate Records auditing report into a 
due-diligence list, which they can share with a regulator.(You can again alter this step to suit any other use cases).
----------------------------------------------------------------------------------------------------------------
Step #5: Go to PartyA, Attach the Corporate Records auditing report into a due-diligence checklist and report to 
the Regulator.Again, the approvalId is the linearId returned in Step #1.
----------------------------------------------------------------------------------------------------------------
flow start CreateCheckListAndAddApprovalInitiator reportTo: Regulator, approvalId: <XXXX-XXX-XXXX-XXXXX-XXXXXX>
----------------------------------------------------------------------------------------------------------------

Step #6: Go to PartyB, Attach the copy of the Corporate Records auditing report into a due-diligence checklist and report to the Regulator. You would need the linearId that is return from Step #5
----------------------------------------------------------------------------------------------------------------
flow start CreateCheckListAndAddApprovalInitiator reportTo: Regulator, approvalId: <XXXX-XXX-XXXX-XXXXX-XXXXXX-Returned-From-Step #5>
----------------------------------------------------------------------------------------------------------------

Step #7: Go to Regulator, do a query on reported due-diligence checklists. You will be able to see both PartyA and PartyB 
had filed a due-diligence checklist.
----------------------------------------------------------------------------------------------------------------
run vaultQuery contractStateType: net.corda.samples.duediligence.states.DueDChecklist
----------------------------------------------------------------------------------------------------------------

This use of Distributed technology Corda helped PartyB saved the cost of go through corporate records due-diligence process while still reaching
 a trusted auditing report.